{"version":3,"file":"pin-field.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["const IGNORED_META_KEYS = [\"Alt\", \"Control\", \"Enter\", \"Meta\", \"Shift\", \"Tab\"];\n\nfunction range(start: number, length: number) {\n  return Array.from({length}, (_, i) => i + start);\n}\n\nfunction debug(scope: string, fn: string, msg?: string) {\n  console.debug(`[PIN Field] (${scope}) ${fn}${msg ? `: ${msg}` : \"\"}`);\n}\n\nfunction getPrevInputIdx(cursor: number) {\n  return Math.max(0, cursor - 1);\n}\n\nfunction getNextInputIdx(cursor: number, max: number) {\n  if (max === 0) return 0;\n  return Math.min(cursor + 1, max - 1);\n}\n\ntype Fallback = {\n  idx: number;\n  val: string;\n};\n\ntype Effect =\n  | {type: \"handle-code-change\"}\n  | {type: \"focus-input\"; idx: number}\n  | {type: \"set-input-val\"; idx: number; val: string}\n  | {type: \"resolve-key\"; idx: number; key: string}\n  | {type: \"reject-key\"; idx: number; key: string}\n  | {type: \"handle-delete\"; idx: number};\n\ntype Action =\n  | {type: \"handle-key-down\"; idx: number; key: string; val: string}\n  | {type: \"handle-key-up\"; idx: number; val: string}\n  | {type: \"handle-paste\"; idx: number; val: string};\n\nexport type PinFieldValidator = string | string[] | RegExp | ((key: string) => boolean);\nexport type PinFieldFormatter = (key: string) => string;\n\nexport class PinField extends HTMLElement {\n  /**\n   * Current input focus cursor.\n   */\n  private cursor: number = 0;\n\n  /**\n   * Actions stack.\n   */\n  private actions: Action[] = [];\n\n  /**\n   * Effects stack.\n   */\n  private effects: Effect[] = [];\n\n  /**\n   * State-holder fallback for old browsers and mobile support.\n   */\n  private fallback: Fallback | null = null;\n\n  /**\n   * Wrapper around the validator (for internal use).\n   */\n  private isKeyAllowed(key?: string) {\n    if (!key) return false;\n    if (key.length > 1) return false;\n    if (typeof this.validate === \"string\") return this.validate.split(\"\").includes(key);\n    if (this.validate instanceof Array) return this.validate.includes(key);\n    if (this.validate instanceof RegExp) return this.validate.test(key);\n    return this.validate(key);\n  }\n\n  /**\n   * List of HTMLInputElement the PIN Field is composed of.\n   */\n  inputs: HTMLInputElement[] = [];\n\n  /**\n   * Length of the field.\n   */\n  length: number = 5;\n\n  /**\n   * Validator.\n   */\n  validate: PinFieldValidator = /^[a-zA-Z0-9]$/;\n\n  /**\n   * Formatter.\n   */\n  format: PinFieldFormatter = (key: string) => {\n    return key;\n  };\n\n  /**\n   * Disabled getter.\n   */\n  get disabled() {\n    return this.hasAttribute(\"disabled\");\n  }\n\n  /**\n   * Disabled setter.\n   */\n  set disabled(val) {\n    if (val) {\n      this.setAttribute(\"disabled\", \"\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n  }\n\n  /**\n   * List of observed attributes.\n   */\n  static get observedAttributes() {\n    return [\"disabled\"];\n  }\n\n  /**\n   * Attribute changed callback.\n   */\n  protected attributeChangedCallback(name: string, prevVal: string, nextVal: string) {\n    if (prevVal !== nextVal) {\n      switch (name) {\n        case \"disabled\": {\n          this.inputs.forEach(i => (i.disabled = this.disabled));\n        }\n      }\n    }\n  }\n\n  /**\n   * Connected callback.\n   */\n  connectedCallback() {\n    if (this.hasAttribute(\"length\")) {\n      this.length = Number(this.getAttribute(\"length\")) || 5;\n      if (this.length < 1) {\n        throw new RangeError(`The PIN Field length should be greater than 0 (got ${this.length})`);\n      }\n    }\n\n    const validate = this.getAttribute(\"validate\");\n    if (typeof validate === \"string\") {\n      this.validate = validate;\n    }\n\n    const input = document.createElement(\"input\");\n    input.autocapitalize = \"off\";\n    input.autocomplete = \"off\";\n    input.inputMode = \"text\";\n\n    const clearAttrs = [];\n    for (let i = 0; i < this.attributes.length; i++) {\n      const attr = this.attributes[i];\n      if (![\"id\", \"autofocus\"].includes(attr.name)) {\n        input.setAttribute(attr.name, attr.value);\n        clearAttrs.push(() => attr && this.removeAttribute(attr.name));\n      }\n    }\n\n    this.append(\n      ...range(0, this.length).map(idx => {\n        const inputClone = input.cloneNode(true) as HTMLInputElement;\n\n        if (idx === 0 && this.hasAttribute(\"autofocus\")) {\n          inputClone.autofocus = true;\n          this.removeAttribute(\"autofocus\");\n        }\n\n        this.inputs.push(inputClone);\n        return inputClone;\n      }),\n    );\n\n    const tpl = document.createElement(\"slot\");\n    const css = document.createElement(\"style\");\n    css.innerText = \":host{display:flex;}\";\n    this.attachShadow({mode: \"open\"}).append(css, tpl);\n\n    clearAttrs.forEach(clear => clear());\n\n    this.inputs.forEach((input, idx) => {\n      input.addEventListener(\"keydown\", this.handleKeyDown(idx));\n      input.addEventListener(\"keyup\", this.handleKeyUp(idx));\n      input.addEventListener(\"paste\", this.handlePaste(idx));\n    });\n  }\n\n  /**\n   * Disconnected callback.\n   */\n  disconnectedCallback() {\n    this.inputs.forEach((input, idx) => {\n      input.removeEventListener(\"keydown\", this.handleKeyDown(idx));\n      input.removeEventListener(\"keyup\", this.handleKeyUp(idx));\n      input.removeEventListener(\"paste\", this.handlePaste(idx));\n    });\n  }\n\n  /**\n   * Set a value starting from a specific index using the effects stack.\n   */\n  private applySetValAt(idx: number, val: string) {\n    if (val.split(\"\").slice(0, this.length).every(this.isKeyAllowed.bind(this))) {\n      const pasteLen = Math.min(val.length, this.length - idx);\n      const nextCursor = getNextInputIdx(pasteLen + idx - 1, this.length);\n\n      this.effects.push(\n        {type: \"handle-code-change\"},\n        {type: \"focus-input\", idx: nextCursor},\n        ...range(0, pasteLen).flatMap<Effect>(i => [\n          {\n            type: \"set-input-val\",\n            idx: idx + i,\n            val: val[i],\n          },\n          {\n            type: \"resolve-key\",\n            idx: idx + i,\n            key: val[i],\n          },\n        ]),\n      );\n    } else {\n      this.effects.push(\n        {type: \"handle-code-change\"},\n        {type: \"reject-key\", idx, key: val},\n        {type: \"set-input-val\", idx, val: \"\"},\n      );\n    }\n  }\n\n  /**\n   * Execute all actions present in the stack.\n   * An action should mutate internal state and generate effects.\n   */\n  private executeAll() {\n    while (this.actions.length > 0) {\n      const action = this.actions.pop() as Action;\n\n      switch (action.type) {\n        case \"handle-key-down\": {\n          debug(\"action\", \"handle-key-down\", `key=${action.key}`);\n\n          switch (action.key) {\n            case \"Unidentified\": {\n              this.fallback = {idx: action.idx, val: action.val};\n              break;\n            }\n\n            case \"Dead\": {\n              this.effects = [\n                {type: \"handle-code-change\"},\n                {type: \"reject-key\", idx: action.idx, key: action.key},\n                {type: \"set-input-val\", idx: action.idx, val: \"\"},\n              ];\n              break;\n            }\n\n            case \"ArrowLeft\": {\n              this.cursor = getPrevInputIdx(action.idx);\n              this.effects = [{type: \"focus-input\", idx: this.cursor}];\n              break;\n            }\n\n            case \"ArrowRight\": {\n              this.cursor = getNextInputIdx(action.idx, this.length);\n              this.effects = [{type: \"focus-input\", idx: this.cursor}];\n              break;\n            }\n\n            case \"Delete\":\n            case \"Backspace\": {\n              this.effects = [{type: \"handle-code-change\"}, {type: \"handle-delete\", idx: action.idx}];\n              break;\n            }\n\n            default: {\n              if (this.isKeyAllowed(action.key)) {\n                this.cursor = getNextInputIdx(action.idx, this.length);\n                this.effects = [\n                  {type: \"handle-code-change\"},\n                  {type: \"focus-input\", idx: this.cursor},\n                  {type: \"resolve-key\", idx: action.idx, key: action.key},\n                  {type: \"set-input-val\", idx: action.idx, val: action.key},\n                ];\n              } else {\n                this.effects = [{type: \"reject-key\", idx: action.idx, key: action.key}];\n              }\n            }\n          }\n\n          break;\n        }\n\n        case \"handle-key-up\": {\n          if (!this.fallback) {\n            debug(\"action\", \"handle-key-up\", \"ignored\");\n            break;\n          }\n\n          debug(\"action\", \"handle-key-up\");\n          const {idx, val: prevVal} = this.fallback;\n          let val = action.val;\n\n          if (prevVal === \"\" && val === \"\") {\n            this.effects.push({type: \"handle-delete\", idx}, {type: \"handle-code-change\"});\n          } else if (prevVal !== \"\" && val !== \"\") {\n            val = prevVal === val[0] ? val.substring(1) : val.substring(0, val.length - 1);\n            this.applySetValAt(idx, val);\n          } else if (val !== \"\") {\n            this.applySetValAt(idx, val);\n          }\n\n          this.fallback = null;\n          break;\n        }\n\n        case \"handle-paste\": {\n          this.applySetValAt(action.idx, action.val);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Apply all effects present in the stack.\n   * An effect is an action with side-effects.\n   */\n  private applyAll() {\n    while (this.effects.length > 0) {\n      const eff = this.effects.pop() as Effect;\n\n      switch (eff.type) {\n        case \"focus-input\": {\n          debug(\"effect\", \"focus-input\", `idx=${eff.idx}`);\n          this.inputs[eff.idx].focus();\n          break;\n        }\n\n        case \"set-input-val\": {\n          debug(\"effect\", \"set-input-val\", `idx=${eff.idx},val=${eff.val}`);\n          const val = this.format(eff.val);\n          this.inputs[eff.idx].value = val;\n          break;\n        }\n\n        case \"resolve-key\": {\n          debug(\"effect\", \"resolve-key\", `idx=${eff.idx},key=${eff.key}`);\n          this.inputs[eff.idx].setCustomValidity(\"\");\n          this.dispatchEvent(new CustomEvent(\"resolve\", {detail: {key: eff.key}}));\n          break;\n        }\n\n        case \"reject-key\": {\n          debug(\"effect\", \"reject-key\", `idx=${eff.idx},key=${eff.key}`);\n          this.inputs[eff.idx].setCustomValidity(\"Invalid key\");\n          this.dispatchEvent(new CustomEvent(\"reject\", {detail: {key: eff.key}}));\n          break;\n        }\n\n        // TODO: split into existing effects\n        case \"handle-delete\": {\n          debug(\"effect\", \"handle-delete\", `idx=${eff.idx}`);\n          const prevVal = this.inputs[eff.idx].value;\n          this.inputs[eff.idx].setCustomValidity(\"\");\n          this.inputs[eff.idx].value = \"\";\n\n          if (!prevVal) {\n            const prevIdx = getPrevInputIdx(eff.idx);\n            this.inputs[prevIdx].focus();\n            this.inputs[prevIdx].setCustomValidity(\"\");\n            this.inputs[prevIdx].value = \"\";\n          }\n\n          break;\n        }\n\n        case \"handle-code-change\": {\n          const dir = (document.documentElement.getAttribute(\"dir\") || \"ltr\").toLowerCase();\n          const codeArr = this.inputs.map(r => r.value.trim());\n          const value = (dir === \"rtl\" ? codeArr.reverse() : codeArr).join(\"\");\n          debug(\"effect\", \"handle-code-change\", `val={${value}}`);\n          this.dispatchEvent(new CustomEvent(\"change\", {detail: {value}}));\n\n          if (value.length === this.length) {\n            this.setAttribute(\"completed\", \"\");\n            this.dispatchEvent(new CustomEvent(\"complete\", {detail: {value}}));\n          } else {\n            this.removeAttribute(\"completed\");\n          }\n\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Execute all actions, then apply all effects.\n   */\n  private render() {\n    this.executeAll();\n    this.applyAll();\n  }\n\n  /**\n   * Wrapper around key down event handler.\n   */\n  private handleKeyDown(idx: number) {\n    return (evt: KeyboardEvent) => {\n      if (IGNORED_META_KEYS.includes(evt.key) || evt.ctrlKey || evt.altKey || evt.metaKey) {\n        debug(\"handleKeyDown\", \"ignored\", `idx=${idx},key=${evt.key}`);\n        return;\n      }\n\n      if (evt.target instanceof HTMLInputElement) {\n        evt.preventDefault();\n        const val = evt.target.value;\n        debug(\"handleKeyDown\", \"triggered\", `idx=${idx},key=${evt.key},val=${val}`);\n        this.actions.push({type: \"handle-key-down\", idx, key: evt.key, val});\n        this.render();\n      }\n    };\n  }\n\n  /**\n   * Wrapper around key up event handler.\n   */\n  private handleKeyUp(idx: number) {\n    return (evt: KeyboardEvent) => {\n      if (evt.target instanceof HTMLInputElement) {\n        const val = evt.target.value;\n        debug(\"handleKeyUp\", \"triggered\", `idx=${idx},val=${val}`);\n        this.actions.push({type: \"handle-key-up\", idx, val});\n        this.render();\n      }\n    };\n  }\n\n  /**\n   * Wrapper around paste event handler.\n   */\n  private handlePaste(idx: number) {\n    return (evt: ClipboardEvent) => {\n      evt.preventDefault();\n      const val = evt.clipboardData ? evt.clipboardData.getData(\"Text\") : \"\";\n      debug(\"handlePaste\", \"triggered\", `idx=${idx},val=${val}`);\n      this.actions.push({type: \"handle-paste\", idx, val});\n      this.render();\n    };\n  }\n}\n\ncustomElements.define(\"swd-pin-field\", PinField);\n\nexport default PinField;\n"],"names":["IGNORED_META_KEYS","range","start","length","Array","from","_","i","debug","scope","fn","msg","console","getPrevInputIdx","cursor","Math","max","getNextInputIdx","min","PinField","key","isKeyAllowed","validate","split","includes","RegExp","test","attributeChangedCallback","name","prevVal","nextVal","inputs","forEach","disabled","connectedCallback","hasAttribute","Number","getAttribute","RangeError","input","document","createElement","autocapitalize","autocomplete","inputMode","clearAttrs","attr","attributes","setAttribute","value","push","removeAttribute","append","map","idx","inputClone","cloneNode","autofocus","tpl","css","innerText","attachShadow","mode","clear","addEventListener","handleKeyDown","handleKeyUp","handlePaste","disconnectedCallback","removeEventListener","applySetValAt","val","slice","every","bind","pasteLen","nextCursor","effects","type","flatMap","executeAll","actions","action","pop","fallback","substring","applyAll","eff","focus","format","setCustomValidity","dispatchEvent","CustomEvent","detail","prevIdx","dir","documentElement","toLowerCase","codeArr","r","trim","reverse","join","render","evt","ctrlKey","altKey","metaKey","target","HTMLInputElement","preventDefault","clipboardData","getData","HTMLElement","customElements","define"],"mappings":"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"}